// Code generated by mockery v2.40.2. DO NOT EDIT.

package mocks

import (
	models "url-shortener/pkg/models"

	mock "github.com/stretchr/testify/mock"
)

// ImageGetter is an autogenerated mock type for the ImageGetter type
type ImageGetter struct {
	mock.Mock
}

// GetImage provides a mock function with given fields: id
func (_m *ImageGetter) GetImage(id int) (models.Image, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetImage")
	}

	var r0 models.Image
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (models.Image, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) models.Image); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Image)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImageGetter creates a new instance of ImageGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImageGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ImageGetter {
	mock := &ImageGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
