// Code generated by mockery v2.40.2. DO NOT EDIT.

package mocks

import (
	models "url-shortener/pkg/models"

	mock "github.com/stretchr/testify/mock"
)

// PostGetter is an autogenerated mock type for the PostGetter type
type PostGetter struct {
	mock.Mock
}

// GetPost provides a mock function with given fields: id
func (_m *PostGetter) GetPost(id int) (models.Post, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetPost")
	}

	var r0 models.Post
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (models.Post, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) models.Post); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Post)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPostGetter creates a new instance of PostGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPostGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *PostGetter {
	mock := &PostGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
